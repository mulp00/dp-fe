/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_leafnodeindex_free(a: number): void;
export function __wbg_provider_free(a: number): void;
export function provider_serialize(a: number, b: number): void;
export function provider_deserialize(a: number, b: number, c: number): void;
export function provider_new(): number;
export function greet(): void;
export function __wbg_identity_free(a: number): void;
export function identity_new(a: number, b: number, c: number, d: number): void;
export function identity_key_package(a: number, b: number): number;
export function identity_serialize(a: number, b: number): void;
export function identity_deserialize(a: number, b: number, c: number, d: number): void;
export function __wbg_group_free(a: number): void;
export function __wbg_addmessages_free(a: number): void;
export function __wbg_removemessages_free(a: number): void;
export function __wbg_updatekeypackagemessage_free(a: number): void;
export function __wbg_leavemessage_free(a: number): void;
export function addmessages_commit(a: number): number;
export function addmessages_welcome(a: number): number;
export function removemessages_commit(a: number): number;
export function removemessages_welcome(a: number): number;
export function updatekeypackagemessage_commit(a: number): number;
export function updatekeypackagemessage_welcome(a: number): number;
export function leavemessage_commit(a: number): number;
export function group_create_new(a: number, b: number, c: number, d: number): number;
export function group_join(a: number, b: number, c: number, d: number, e: number): void;
export function group_export_ratchet_tree(a: number): number;
export function group_add_member(a: number, b: number, c: number, d: number, e: number): void;
export function group_remove_member(a: number, b: number, c: number, d: number, e: number): void;
export function group_leave(a: number, b: number, c: number, d: number): void;
export function group_update_key_package(a: number, b: number, c: number, d: number): void;
export function group_merge_pending_commit(a: number, b: number, c: number): void;
export function group_process_message(a: number, b: number, c: number, d: number, e: number): void;
export function group_export_key(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): void;
export function group_get_member_index(a: number, b: number, c: number): void;
export function group_serialize(a: number, b: number): void;
export function group_deserialize(a: number, b: number, c: number): void;
export function __wbg_nowelcomeerror_free(a: number): void;
export function __wbg_keypackage_free(a: number): void;
export function keypackage_serialize(a: number, b: number): void;
export function keypackage_deserialize(a: number, b: number, c: number): void;
export function __wbg_ratchettree_free(a: number): void;
export function ratchettree_serialize(a: number, b: number): void;
export function ratchettree_deserialize(a: number, b: number, c: number): void;
export function __wbg_wasmbindgentestcontext_free(a: number): void;
export function wasmbindgentestcontext_new(): number;
export function wasmbindgentestcontext_args(a: number, b: number, c: number): void;
export function wasmbindgentestcontext_run(a: number, b: number, c: number): number;
export function __wbgtest_console_log(a: number): void;
export function __wbgtest_console_debug(a: number): void;
export function __wbgtest_console_info(a: number): void;
export function __wbgtest_console_warn(a: number): void;
export function __wbgtest_console_error(a: number): void;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h6b9866cc3b2cfae8(a: number, b: number, c: number): void;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke3_mut__h367e4c38e8f2a4ce(a: number, b: number, c: number, d: number, e: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__hf798eaf28bc95219(a: number, b: number, c: number, d: number): void;
